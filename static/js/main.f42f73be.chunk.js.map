{"version":3,"sources":["Static/icon-person.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultTip","bill","selectTip","numberOfPeople","tipAmount","total","App","useState","tip","setTip","onChangeTip","prop","value","handleSelectTip","num","handleTipAmount","handleTotal","className","id","type","placeholder","onChange","event","parseFloat","currentTarget","isNaN","autoComplete","onClick","src","IconPerson","alt","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f42f73be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import './index.css'\nimport IconPerson from \"./Static/icon-person.svg\";\nimport React, {useState} from \"react\";\n\n\ntype Tip = {\n    bill: number;\n    selectTip: number;\n    numberOfPeople: number;\n    tipAmount: number;\n    total: number;\n}\n\n\nconst defaultTip: Tip = {\n    bill: 0,\n    selectTip: 0,\n    numberOfPeople: 0,\n    tipAmount: 0,\n    total: 0\n}\n\nfunction App() {\n    const [tip, setTip] = useState(defaultTip);\n\n    const onChangeTip = <P extends keyof Tip>(prop: P, value: Tip[P]) => {\n        setTip({...tip, [prop]: value});\n    };\n\n    function handleBill(event: React.ChangeEvent<HTMLInputElement>) {\n        let bill = parseFloat(event.currentTarget.value);\n        if (isNaN(bill)) {\n            tip.bill = 0;\n        } else tip.bill = bill;\n        handleTipAmount();\n        handleTotal();\n    }\n\n    function handleNumberOfPeople(event: React.ChangeEvent<HTMLInputElement>) {\n        let numberOfPeople = parseInt(event.currentTarget.value);\n        if (isNaN(numberOfPeople)) {\n            tip.numberOfPeople = 1;\n        } else {\n            tip.numberOfPeople = numberOfPeople;\n        }\n        handleTipAmount();\n        handleTotal();\n    }\n\n    function handleSelectTip(num: number) {\n        tip.selectTip = num;\n        handleTipAmount();\n        handleTotal();\n    }\n\n    function handleCustomSelectTip(event: React.ChangeEvent<HTMLInputElement>) {\n        tip.selectTip = parseFloat(event.currentTarget.value);\n        handleTipAmount();\n        handleTotal();\n    }\n\n    function handleTipAmount() {\n        if (tip.selectTip !== 0 && tip.numberOfPeople !== 0) {\n            let value = ((tip.selectTip * tip.bill) / 100) / tip.numberOfPeople;\n            tip.tipAmount = value;\n            onChangeTip(\"tipAmount\", value);\n        }\n\n    }\n\n    function handleTotal() {\n        if (tip.selectTip !== 0 && tip.numberOfPeople !== 0) {\n            let tipValue = (tip.selectTip * tip.bill) / 100;\n            let total = tipValue + tip.bill;\n            tip.total = total;\n            onChangeTip(\"total\", total);\n        }\n    }\n\n    function handleReset() {\n        tip.total = 0;\n        tip.tipAmount = 0;\n        onChangeTip(\"total\", 0);\n        onChangeTip(\"tipAmount\", 0);\n    }\n\n    return (\n        <div className=\"App min-h-screen\">\n            <div className=\"text-center pt-32 uppercase Title text-2xl tracking-widest\">\n                <h1>Spli</h1>\n                <h1>tter</h1>\n            </div>\n            <div className=\"Card\">\n                <div className=\"Bill\">\n                    <h3 className=\"Bill-Text\">Bill</h3>\n                    <div className=\"Bill-Input-Field\">\n                        <div className=\"Dollar-Icon\">NOK</div>\n                        <input id=\"number\" type=\"number\" placeholder=\"0\" className=\"Bill-Input\"\n                               onChange={handleBill} autoComplete=\"off\"\n                        />\n                    </div>\n                </div>\n                <div className=\"Tip\">\n                    <h3 className=\"Bill-Text\">Select Tip %</h3>\n                    <div className=\"Tip-Grid\">\n                        <button onClick={() => handleSelectTip(5)}>5%</button>\n                        <button onClick={() => handleSelectTip(10)}>10%</button>\n                        <button onClick={() => handleSelectTip(15)}>15%</button>\n                        <button onClick={() => handleSelectTip(20)}>20%</button>\n                        <button onClick={() => handleSelectTip(25)}>25%</button>\n                        <input id=\"number\" autoComplete='off' type=\"number\" placeholder=\"Custom\" className=\"Custom-Tip\"\n                               onChange={handleCustomSelectTip}/>\n                    </div>\n                </div>\n                <div className=\"Bill\">\n                    <h3 className=\"Bill-Text\">Number of People</h3>\n                    <div className=\"Bill-Input-Field\">\n                        <img src={IconPerson} alt=\"Person icon\" className=\"Person-Icon\"/>\n                        <input id=\"number\" autoComplete='off' type=\"number\" placeholder=\"0\" className=\"Bill-Input\"\n                               onChange={handleNumberOfPeople}/>\n                    </div>\n                </div>\n                <div className=\"Amount\">\n                    <h3 className=\"Tip-h3\">Tip Amount</h3>\n                    <h4 className=\"Tip-h4\">/ person</h4>\n                    <h1 className=\"Tip-h1\">{tip.tipAmount}</h1>\n                    <h3 className=\"Total-h3\">Total</h3>\n                    <h4 className=\"Total-h4\">/ person</h4>\n                    <h1 className=\"Total-h1\">{tip.total}</h1>\n                    <button className=\"Amount-Reset\" onClick={handleReset}>Reset</button>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}